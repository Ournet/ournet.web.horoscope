extends ./_layouts/horoscope

block horoscope_content
  .report-margin
    .pull-right
        .social-likes(data-url=site.head.canonical)
          each item in config.shareDataServices
            div(class=item)
    if (periods)
      .a-periods
        each item in periods
          a(class=item.css, href=item.href)= item.text
    .page-title
      h1= title
      h2.sub-title
        = subTitle
      br
      
  if (currentSignReport)
    if (periodSign === 'W')
      +horoscopeWeekReport(currentSignReport, currentWeekPeriodText, true)
      //- include ./_includes/n-subscribe
      +weekZodiacSignsIcons()
    else
      +horoscopeDayReport(currentSignReport, currentDayPeriodText, true)
      +dayZodiacSignsIcons()

  .report-margin
    if (config.oneSignal)
      include ./_includes/notifications-subscribe-bar
      br
    include _includes/ad-bottom
    br
    .fb-comments(data-href=site.head.canonical, data-numposts="5", data-width="100%")
    br
    include _includes/ad-bottom


    script(src='https://cdn.onesignal.com/sdks/OneSignalSDK.js', async)
    script.
      var OneSignal = window.OneSignal || [];

      OneSignal.push(['init', {
        appId: "#{config.oneSignal.appId}",
        autoRegister: false,
        persistNotification: false,
        notifyButton: {
          enable: true,
          showCredit: false,
          prenotify: true
        },
        welcomeNotification: {
          disable: true
        },
        safari_web_id: "#{config.oneSignal.safari_web_id}"
      }]);
      
      OneSignal.push(function() {

        var category='notifications-horo';
        
        function initNotifications(permission) {
          var currentTags;
          var signId = '#{sign.id}';

          function subscribedToCurrentSign() {
            return currentTags && currentTags['zodiac-sign'] == signId;
          }

          function setTags() {
            OneSignal.sendTags({'zodiac-sign': signId});
          }

          function subscribeToNotifications() {
            OneSignal.registerForPushNotifications();
            ga('send', 'event', category, 'show-register-native');
          }

          function hideSubscribe() {
            $('.c-subscribe-bar').addClass('hidden');
          }
          function showSubscribe() {
            $('.c-subscribe-bar').removeClass('hidden');
          }

          if(permission === 'granted') {
            OneSignal.getTags(function(tags) {
              currentTags = tags;
              if (!subscribedToCurrentSign()) {
                showSubscribe();
              }
            });
          } else {
            showSubscribe();
          }
          
          $('.c-subscribe-bar').click(function(event) {
            event.preventDefault();
            event.stopPropagation();
            ga('send', 'event', category, 'click-subscribe-btn');
            if(permission === 'granted') {
              setTags();
              ga('send', 'event', category, 'changed-sign', signId);
              hideSubscribe();
            } else {
              subscribeToNotifications();
            }
          });


          OneSignal.on('notificationPermissionChange', function(permissionChange) {
            var currentPermission = permissionChange.to;
            if (currentPermission === 'granted') {
              setTags();
            }
            ga('send', 'event', category, currentPermission);
          });
          // Occurs when the user's subscription changes to a new value.
          OneSignal.on('subscriptionChange', function (isSubscribed) {
            if (isSubscribed) {
              hideSubscribe();
              setTags();
            } else {
              showSubscribe();
            }
          });

        }

        // If we're on an unsupported browser, do nothing
        if (OneSignal.isPushNotificationsSupported()) {
          OneSignal.push(["getNotificationPermission", function(permission) {
              initNotifications(permission);
          }]);
          ga('send', 'event', category, 'supported');
        } else {
          hideSubscribe();
          ga('send', 'event', category, 'not-supported');
        }
      });
  script.
    (function(d, s, id) {
      var js, fjs = d.getElementsByTagName(s)[0];
      if (d.getElementById(id)) return;
      js = d.createElement(s); js.id = id;
      js.src = "//connect.facebook.net/#{site.simpleLocale}/sdk.js#xfbml=1&version=v2.6&appId=#{config.facebookId}";
      fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
